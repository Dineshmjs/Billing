{"ast":null,"code":"var _jsxFileName = \"/home/spe/Desktop/Billing/src/component/address/index.js\";\nimport React, { useState } from 'react';\nimport InputEntry from './InputEntry';\nimport ViewAddress from './ViewAddress';\n\nfunction Address() {\n  const [reload, setReload] = useState(1);\n\n  const Reload = id => {\n    console.log(id);\n    setReload(id);\n  };\n\n  const [update, setUpdate] = useState(false);\n  const [updateValues, setupdateValues] = useState({});\n  const [insert, setInsert] = useState(true);\n\n  const Update = (data, status, values) => {\n    console.log(data, status);\n\n    if (status) {\n      editItem(values);\n      setUpdate(status);\n      setupdateValues(data);\n      setInsert(false);\n    } else {\n      setUpdate(status);\n      setupdateValues(data);\n      setInsert(true);\n    }\n  };\n\n  const editItem = data => {\n    http.put(\"address\").then(res => {\n      console.log(res.data);\n      setreRender(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputEntry, {\n    Reload: Reload,\n    updateValues: updateValues,\n    Update: Update,\n    insert: insert,\n    update: update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ViewAddress, {\n    reload: reload,\n    Update: Update,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Address;","map":{"version":3,"sources":["/home/spe/Desktop/Billing/src/component/address/index.js"],"names":["React","useState","InputEntry","ViewAddress","Address","reload","setReload","Reload","id","console","log","update","setUpdate","updateValues","setupdateValues","insert","setInsert","Update","data","status","values","editItem","http","put","then","res","setreRender","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,OAAT,GAAmB;AACf,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBL,QAAQ,CAAC,CAAD,CAAnC;;AAEA,QAAMM,MAAM,GAAIC,EAAD,IAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAF,IAAAA,SAAS,CAACE,EAAD,CAAT;AACH,GAHD;;AAKA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMgB,MAAM,GAAG,CAACC,IAAD,EAAMC,MAAN,EAAaC,MAAb,KAAuB;AAClCX,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ,EAAiBC,MAAjB;;AACA,QAAGA,MAAH,EAAU;AACNE,MAAAA,QAAQ,CAACD,MAAD,CAAR;AACAR,MAAAA,SAAS,CAACO,MAAD,CAAT;AACAL,MAAAA,eAAe,CAACI,IAAD,CAAf;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AAGH,KAPD,MAQI;AACAJ,MAAAA,SAAS,CAACO,MAAD,CAAT;AACAL,MAAAA,eAAe,CAACI,IAAD,CAAf;AACAF,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH;AACJ,GAfD;;AAiBA,QAAMK,QAAQ,GAAEH,IAAD,IAAQ;AACnBI,IAAAA,IAAI,CAACC,GAAL,CAAS,SAAT,EACCC,IADD,CACMC,GAAG,IAAE;AACPhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACP,IAAhB;AACAQ,MAAAA,WAAW,CAACD,GAAG,CAACP,IAAL,CAAX;AAEH,KALD,EAMCS,KAND,CAMOC,GAAG,IAAE;AACRnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,KARD;AASH,GAVD;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAErB,MADZ;AAEI,IAAA,YAAY,EAAEM,YAFlB;AAGI,IAAA,MAAM,EAAEI,MAHZ;AAII,IAAA,MAAM,EAAEF,MAJZ;AAKI,IAAA,MAAM,EAAEJ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEN,MAArB;AAA6B,IAAA,MAAM,EAAEY,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAYH;;AAED,eAAeb,OAAf","sourcesContent":["import React,{useState} from 'react'\nimport InputEntry from './InputEntry'\nimport ViewAddress from './ViewAddress'\n\nfunction Address() {\n    const [reload,setReload] = useState(1)\n\n    const Reload = (id)=>{\n        console.log(id)\n        setReload(id) \n    }\n\n    const [update, setUpdate] = useState(false)\n    const [updateValues, setupdateValues] = useState({})\n    const [insert, setInsert] = useState(true)\n\n    const Update = (data,status,values) =>{\n        console.log(data,status)\n        if(status){\n            editItem(values)\n            setUpdate(status)\n            setupdateValues(data)\n            setInsert(false)\n\n\n        }\n        else{\n            setUpdate(status)\n            setupdateValues(data)\n            setInsert(true)\n        }\n    }\n\n    const editItem=(data)=>{\n        http.put(\"address\")\n        .then(res=>{\n            console.log(res.data)\n            setreRender(res.data)\n\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <InputEntry \n                Reload={Reload}                 \n                updateValues={updateValues} \n                Update={Update}\n                insert={insert}\n                update={update}\n            />\n            <ViewAddress reload={reload} Update={Update} />\n        </div>\n    )\n}\n\nexport default Address\n"]},"metadata":{},"sourceType":"module"}